/* tslint:disable */
/* eslint-disable */
/**
 * Cale API
 *  # About cale.app provides a scheduling API that helps developers to integrate scheduling features into their applications. 
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './Status';

/**
 * Provider
 * 
 * A provider is a person or entity that provides services
 * @export
 * @interface Provider
 */
export interface Provider {
    /**
     * Created at UTC timestamp
     * @type {Date}
     * @memberof Provider
     */
    createdAt: Date;
    /**
     * Provider ID
     * @type {string}
     * @memberof Provider
     */
    id: string;
    /**
     * Provider name
     * @type {string}
     * @memberof Provider
     */
    name: string;
    /**
     * 
     * @type {Status}
     * @memberof Provider
     */
    status: Status;
    /**
     * Updated at UTC timestamp
     * @type {Date}
     * @memberof Provider
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the Provider interface.
 */
export function instanceOfProvider(value: object): value is Provider {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ProviderFromJSON(json: any): Provider {
    return ProviderFromJSONTyped(json, false);
}

export function ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provider {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'id': json['id'],
        'name': json['name'],
        'status': StatusFromJSON(json['status']),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function ProviderToJSON(value?: Provider | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'name': value['name'],
        'status': StatusToJSON(value['status']),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

