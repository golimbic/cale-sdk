/* tslint:disable */
/* eslint-disable */
/**
 * Cale API
 *  # About cale.app provides a scheduling API that helps developers to integrate scheduling features into their applications. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
} from './Price';
import type { ReservationStatus } from './ReservationStatus';
import {
    ReservationStatusFromJSON,
    ReservationStatusFromJSONTyped,
    ReservationStatusToJSON,
} from './ReservationStatus';

/**
 * 
 * @export
 * @interface Reservation
 */
export interface Reservation {
    /**
     * 
     * @type {Date}
     * @memberof Reservation
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Reservation
     */
    customerId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Reservation
     */
    endTime: Date;
    /**
     * 
     * @type {string}
     * @memberof Reservation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Reservation
     */
    offerId: string;
    /**
     * 
     * @type {Date}
     * @memberof Reservation
     */
    startTime: Date;
    /**
     * 
     * @type {ReservationStatus}
     * @memberof Reservation
     */
    status: ReservationStatus;
    /**
     * 
     * @type {Price}
     * @memberof Reservation
     */
    totalPrice: Price;
    /**
     * 
     * @type {Date}
     * @memberof Reservation
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the Reservation interface.
 */
export function instanceOfReservation(value: object): value is Reservation {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('offerId' in value) || value['offerId'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('totalPrice' in value) || value['totalPrice'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ReservationFromJSON(json: any): Reservation {
    return ReservationFromJSONTyped(json, false);
}

export function ReservationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reservation {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'customerId': json['customer_id'] == null ? undefined : json['customer_id'],
        'endTime': (new Date(json['end_time'])),
        'id': json['id'],
        'offerId': json['offer_id'],
        'startTime': (new Date(json['start_time'])),
        'status': ReservationStatusFromJSON(json['status']),
        'totalPrice': PriceFromJSON(json['total_price']),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function ReservationToJSON(value?: Reservation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'customer_id': value['customerId'],
        'end_time': ((value['endTime']).toISOString()),
        'id': value['id'],
        'offer_id': value['offerId'],
        'start_time': ((value['startTime']).toISOString()),
        'status': ReservationStatusToJSON(value['status']),
        'total_price': PriceToJSON(value['totalPrice']),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

